#dear future aaron. This code works. I know it's terrible. But it works. Don't fuck with it.

#oh god, are you fucking with it


$trait_dict = {
	"1" => "Bear Strength: +2 Str",
	"2" => "Puny: -2 Str",
	"3" => "Brainy: +2 Int",
	"4" => "Dimwitted: -2 Int",
	"5" => "Fertile: + 1 Child",
	"6" => "Low Fertility: -1 Child",
	"7" => "Hawk Eye: + 1 Atk",
	"8" => "Nearsighted: -1 Atk",
	"9"=> "Hearty: +2 Con",
	"10" => "Sickly: -2 Con",
	"11" => "Impressionable: -2 Wis",
	"12" => "Strong Will: +2 Wis",
	"13" => "Kingmaker: More male children",
	"14" => "Queenmaker: More female children",
	"15" => "Nimble: +2 Dex",
	"16" => "Clumsy: -2 Dex",
	"17" => "Fast: +10ft Move",
	"18" => "Slow: -10ft Move",
	"19" => "Curious: +50% XP gain",
	"20" => "Slow Learner: -50% XP gain",
}

$quirk_dict = {
	"1" => "Alert: +1 AC",
	"2" => "Attuned: +2 Wis",
	"3" => "Berserker: Rage upon ally death",
	"4" => "Forgetful: -2 Int",
	"5" => "Bloodthirsty: temporary +1 Atk, Str, and Dex if vanquished an enemy recently",
	"6" => "NERD: +2 Int",
	"7" => "Brazen: +1 Atk",
	"8" => "Hates Children: -1 Child",
	"9" => "Clearheaded: +2 Wis",
	"10" => "Cocky: -1 AC, +1 CHA",
	"11" => "Chronic Depression: -2 Wis, -10 speed, -1 Child",
	"12" => "Quitter: -1 Atk, -1 AC, -10 speed",
	"13" => "Fainthearted: Flees upon ally death",
	"14" => "Racism: -1 Atk against those not of the hated house, +1 against them.",
	"15" => "Family Ties: +1 Atk when fighting alongside family",
	"16" => "Cautious: +1 AC, -5 Init",
	"17" => "Clean-living: Extended lifespan, vegan",
	"18" => "Insightful: +2 Wis",
	"19" => "Sociopathic Serial Killer.",
	"20" => "Inner Peace: +2 Wis",
	"21" => "Purity of Purpose: +1 Str, Dex. +10% HP, rounding down.",
	"22" => "Irritable: -1 Atk",
	"23" => "Hermit: -1 to all stats when in a group.",
	"24" => "Athlete: +2 Str",
	"25" => "Nervous: -1 Atk",
	"26" => "Nihilistic: -2 Wis",
	"27" => "Oblivious: -4 Wis",
	"28" => "Optimistic:  :D ",
	"29" => "Pack Thinker: Can take attacks of opportunities when adjacent allies do",
	"30" => "Passionless: -1 Child +2 Wis, -10% HP",
	"31" => "110%: +1 Atk, +1 AC. +10ft move",
	"32" => "Pessimist: >:( ",
	"33" => "Reckless: +4 Initiative, -1 AC",
	"34" => "Rebellious: (remove personality traits shared with parents or trainers)",
	"35" => "Alcoholic: +1 Str, -1 Dex, -1 Int, -1 AC.",
	"36" => "Shifty: +1 AC",
	"37" => "Sluggish: -1 AC",
	"38" => "Stalwart: +1 AC",
	"39" => "Hysterical: -1 Atk, AC, child",
	"40" => "Scatterbrained: -2 Wis",
	"41" => "Sound sleeper: +10% HP, hard to wake",
	"42" => "Wily: +1 AC",
	"43" => "Withdrawn: Does not pass on personality traits to others",
	"44" => "Well-traveled: +2 Int",
	"45" => "Honest: 'Yep, you're fat.' ",
	"46" => "Big-Boned: +2 Con, -3 Dex.",
	"47" => "Brutish: +2 Str, -3 Dex",
	"48" => "Light Frame: +10 Speed, -2 Con",
	"49" => "Cavalier: +1 melee damage, -1 Atk",
	"50" => "Exceptionally talkative:  :U  (jibberjabber intensifies)",
	"51" => "Genius: +2 to all mental stats.",
	"52" => "Inbreeding Type 1: -2 to all physical stats",
	"53" => "Inbreeding Type 2: each child has a 50% chance of death.",
	"54" => "Hemophilia: -1 child, and every attack inflicts bleed damage.",
	"55" => "Dullard: -2 to all mental stats",
	"56" => "Fainting dog syndrome: cumulative 1/6 chance of passing out during combat.",
	"57" => "Weird birthmarks everywhere: spot spot spot.",
	"58" => "HellaGenius: +4 to all mental stats",
	"59" => "Imbecile: -4 to all mental stats",
	"60" => "Musical prodigy: +1 Cha, (special abilities in fae bloodline)"

}





class Hero

    attr_reader :stats
    attr_reader :traits
    attr_reader :personality

  def initialize(name, stats, traits, personality)
    @name = name
    @stats = stats
    @traits = traits
    @personality = personality
  end

  def statscombine(others)
		i = 0

    while i < stats.count
			p stats
			stats[i] = ((stats[i] + others[i]) / 2 ) + rand(2)
      i += 1
    end
    stats
  end

end


  # def traitscombine(others)
	#
  #     out = []
  #     i = 0
	#
  #     #60% chance of inheriting a trait
  #     while i < @traits.count
  #       coin = rand(10)
  #       if coin <= 5
  #           out << @traits[i]
  #       end
  #       i += 1
  #     end
	#
	#   i = 0
  #     #60% from the other parent
  #     while i < others.count
  #       coin = rand(10)
  #       if coin <= 5
  #           out << others[i]
  #       end
  #       i += 1
  #     end
	#
  #     #add the random trait
  #     d20 = 1 + rand(20)
  #     out << d20
	#
  #     #beef up traits, if we have too few
  #     while out.count < 3
  #       d20 = 1 + rand(20)
  #       out << d20
  #     end
	#
  #     #now, trim down to 3 traits if we have too many
  #     while out.count > 3
  #         dice = rand(out.count)
  #         out.delete_at(dice)
  #     end
	#
  #     #convert our array of keys into human readable text
  #     wordout = []
	#
	#
  #     out.map! do |val|
  #       val = val.to_s
  #     end
	#
  #     i = 0
  #     while i < out.count
  #       wordout << $trait_dict[((out[i].to_i)).to_s]
	# 	wordout << $trait_dict.keys[out[i].to_i - 1]
  #       i += 1
  #     end
	#
	#
  #     #return the child trait array
  #     wordout
	#
  # end
	#
  # def personalitycombine(other)
	#
	#
  #     i = 0
  #     out = []
	#
  #     #33% chance of inheriting a trait
  #     while i < @personality.count
  #       coin = rand(3)
  #       if coin == 1
  #           out << @personality[i]
  #       end
  #       i += 1
  #     end
  #     i = 0
	#
  #     #33% from the other parent
  #     while i < other.count
  #       coin = rand(3)
  #       if coin == 1
  #           out << other[i]
  #       end
  #       i += 1
  #     end
	#
  #     #add the random quirk
  #     d50 = 1 + rand(50)
  #     out << d50
	#
  #     #beef up quirks, if we have too few
  #     while out.count < 3
  #       d50 = 1 + rand(50)
  #       out << d50
  #     end
	#
  #     #now, trim down to 3 quirks if we have too many
  #     while out.count > 3
  #         dice = rand(out.count)
  #         out.delete_at(dice)
  #     end
	#
  #     #convert our array of keys into human readable text
  #     wordout = []
  #     i = 0
	#
	#
  #     out.map! do |val|
  #       val = val.to_s
  #     end
	#
  #     while i < out.count
  #       wordout << $quirk_dict[out[i]]
	# 	wordout << $quirk_dict.keys[out[i].to_i - 1]
  #       i += 1
  #     end
	#
	#
  #     #return the child trait array
  #     wordout
	#
  # end


	john = Hero.new("John", [10,10,10,10,10,10] , [10, 10, 10] , [5,5,5])
	jane = Hero.new("Jane", [10,10,10,10,10,10] , [10, 10, 10] , [5,5,5])

	puts john.statscombine(jane)
